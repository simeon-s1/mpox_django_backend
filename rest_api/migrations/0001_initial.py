# Generated by Django 4.1.6 on 2023-08-09 12:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnnotationType",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "seq_ontology",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("region", models.CharField(blank=True, max_length=50, null=True)),
                ("test", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "annotation_type",
            },
        ),
        migrations.CreateModel(
            name="Element",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=100)),
                ("accession", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("start", models.BigIntegerField()),
                ("end", models.BigIntegerField()),
                ("strand", models.BigIntegerField(blank=True, null=True)),
                ("sequence", models.TextField(blank=True, null=True)),
                ("standard", models.BigIntegerField()),
                ("parent_id", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "element",
            },
        ),
        migrations.CreateModel(
            name="Lineages",
            fields=[
                (
                    "lineage",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("sublineage", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "lineages",
            },
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=200, unique=True)),
                ("datatype", models.CharField(max_length=45)),
                ("querytype", models.CharField(max_length=45)),
                ("description", models.TextField()),
                ("target", models.CharField(max_length=45)),
                ("standard", models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                "db_table": "property",
            },
        ),
        migrations.CreateModel(
            name="Sequence",
            fields=[
                (
                    "seqhash",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "sequence",
            },
        ),
        migrations.CreateModel(
            name="Translation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("codon", models.CharField(max_length=100)),
                ("aa", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "translation",
            },
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("pre_ref", models.CharField(blank=True, max_length=1, null=True)),
                ("ref", models.CharField(max_length=200)),
                ("alt", models.CharField(max_length=200)),
                ("start", models.BigIntegerField()),
                ("end", models.BigIntegerField()),
                ("parent_id", models.BigIntegerField(blank=True, null=True)),
                ("label", models.TextField()),
                ("frameshift", models.BigIntegerField()),
                (
                    "element",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.element",
                    ),
                ),
            ],
            options={
                "db_table": "variant",
                "unique_together": {("element", "start", "end", "ref", "alt")},
            },
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=1000, unique=True)),
                ("datahash", models.CharField(max_length=200)),
                (
                    "seqhash",
                    models.ForeignKey(
                        db_column="seqhash",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.sequence",
                    ),
                ),
            ],
            options={
                "db_table": "sample",
            },
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("accession", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("organism", models.CharField(blank=True, max_length=100, null=True)),
                ("standard", models.BigIntegerField()),
                (
                    "translation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.translation",
                    ),
                ),
            ],
            options={
                "db_table": "reference",
            },
        ),
        migrations.CreateModel(
            name="Molecule",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=100)),
                ("accession", models.CharField(max_length=100, unique=True)),
                ("symbol", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=500)),
                ("length", models.BigIntegerField()),
                ("segment", models.BigIntegerField()),
                ("standard", models.BigIntegerField()),
                (
                    "reference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.reference",
                    ),
                ),
            ],
            options={
                "db_table": "molecule",
            },
        ),
        migrations.AddField(
            model_name="element",
            name="molecule",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="rest_api.molecule"
            ),
        ),
        migrations.CreateModel(
            name="Alignment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "element",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.element",
                    ),
                ),
                (
                    "seqhash",
                    models.ForeignKey(
                        db_column="seqhash",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.sequence",
                    ),
                ),
            ],
            options={
                "db_table": "alignment",
            },
        ),
        migrations.CreateModel(
            name="Elempart",
            fields=[
                (
                    "element",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="rest_api.element",
                    ),
                ),
                ("start", models.BigIntegerField()),
                ("end", models.BigIntegerField()),
                ("strand", models.BigIntegerField()),
                ("base", models.FloatField()),
                ("segment", models.BigIntegerField()),
            ],
            options={
                "db_table": "elempart",
                "unique_together": {("element", "segment")},
            },
        ),
        migrations.CreateModel(
            name="Variant2Property",
            fields=[
                (
                    "property",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="rest_api.property",
                    ),
                ),
                ("value_integer", models.BigIntegerField(blank=True, null=True)),
                (
                    "value_float",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=10, null=True
                    ),
                ),
                ("value_text", models.TextField(blank=True, null=True)),
                (
                    "value_varchar",
                    models.CharField(blank=True, max_length=4000, null=True),
                ),
                ("value_blob", models.BinaryField(blank=True, null=True)),
                ("value_date", models.DateField(blank=True, null=True)),
                ("value_zip", models.TextField(blank=True, null=True)),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.variant",
                    ),
                ),
            ],
            options={
                "db_table": "variant2property",
                "unique_together": {("property", "variant")},
            },
        ),
        migrations.CreateModel(
            name="Sample2Property",
            fields=[
                (
                    "property",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="rest_api.property",
                    ),
                ),
                ("value_integer", models.BigIntegerField(blank=True, null=True)),
                (
                    "value_float",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=10, null=True
                    ),
                ),
                ("value_text", models.TextField(blank=True, null=True)),
                (
                    "value_varchar",
                    models.CharField(blank=True, max_length=4000, null=True),
                ),
                ("value_blob", models.BinaryField(blank=True, null=True)),
                ("value_date", models.DateField(blank=True, null=True)),
                ("value_zip", models.TextField(blank=True, null=True)),
                (
                    "sample",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.sample",
                    ),
                ),
            ],
            options={
                "db_table": "sample2property",
                "unique_together": {("property", "sample")},
            },
        ),
        migrations.CreateModel(
            name="Alignment2Variant",
            fields=[
                (
                    "variant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="rest_api.variant",
                    ),
                ),
                (
                    "alignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.alignment",
                    ),
                ),
            ],
            options={
                "db_table": "alignment2variant",
                "unique_together": {("variant", "alignment")},
            },
        ),
        migrations.CreateModel(
            name="Alignment2Annotation",
            fields=[
                (
                    "variant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="rest_api.variant",
                    ),
                ),
                (
                    "alignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.alignment",
                    ),
                ),
                (
                    "annotation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="rest_api.annotationtype",
                    ),
                ),
            ],
            options={
                "db_table": "alignment2annotation",
                "unique_together": {("variant", "alignment", "annotation")},
            },
        ),
    ]
